%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 14 19 581 822 
%%
%%Scilab Postscript File (Copyright 1995-2005 J.Ph Chancelier Enpc/cermics)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath gsave background Setcolor eofill grestore
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	% when  b&w is used drawsegs uses dash not gray levels 
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev xsetgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev xsetgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	arsize dx mul norme div /dx1 exch def 
	arsize dy mul norme div /dy1 exch def 
% 	2 following lines modified (correction bug 607 (bruno 18 nov 2004)) 
	/depx tipx def 
	/depy tipy def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat
        
        % don't fill if the color is out of colormap
        % that's the disctinction between drawArc and FillArc
	glev 1 WhiteLev add le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } ifelse
} def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev xsetgray stroke
	Cmsave1 setmatrix } ifelse
} def 


%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

% set dash styles : max number is hardcoded to 6 
% /DashTab [[] [20 50 20 50]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/DashTab [[]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/Setdash {/i exch  0 lmax 5 lmin def i  DashTab i get 0 setdash } def 

% style for drawing: color gray or dash 
/xsetgray { usecolor 0 le {Setdash} {Setgray} ifelse } def 

% default value for colormode 

/usecolor 1 def 

% changing fonts encoding 

/Courier findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Courier exch definefont pop

/Times-Roman findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Roman exch definefont pop

/Times-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Bold exch definefont pop


/Times-BoldItalic findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-BoldItalic exch definefont pop

/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica exch definefont pop

/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Bold exch definefont pop

/Helvetica-BoldOblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-BoldOblique exch definefont pop

/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Oblique exch definefont pop

% used when extracting Latex from scilab generated text
%Latex:% MySetFigFont
%Latex:\begingroup\makeatletter\ifx\MySetFigFont\undefined%
%Latex:\gdef\MySetFigFont#1#2#3#4#5{%
%Latex:  \reset@font\fontsize{#1}{#2pt}%
%Latex:  \fontfamily{#3}\fontseries{#4}\fontshape{#5}%
%Latex:  \selectfont}%
%Latex:\fi\endgroup%
%Latex:% myput 
%Latex:\ifx\myput\undefined%
%Latex:\long\def\myput#1#2#3#4{\put(#1,#2){\makebox(0,0)[lb]{\smash{{\MySetFigFont{#3}{#3}{\familydefault}{\mddefault}{\updefault}{\color[rgb]{0,0,0}#4}}}}}}
%Latex:\fi%

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 



/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%scipos_w=3000
%scipos_h=2120
% Dessin en bas a gauche de taille 3000,2120
90 rotate 0 neg 2261 neg 10 div translate
[2.674194 20 div 0 0 2.674194 20 div neg 198 10 div 2120 10 div] concat
% Init driver 
/PaintBackground {WhiteLev 2 add background eq {}{ (drawbox) 4 [background 1 add] [0 0 6000 4240] dogrey}ifelse } def
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
/background 33 def PaintBackground
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/usecolor 1 def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
/WhiteLev 31 def
/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%Latex:\setlength{\unitlength}{0.05pt}
%Latex:\begin{picture}(6000,4240)(200,0)
/background 33 def PaintBackground
/background 33 def PaintBackground
/background 33 def PaintBackground
32 Setcolor
5 Thickness
750 530 4500 3180 setclipzone
-1 -1 200000 200000 setclipzone
[] 0 setdash
32 Setcolor
33 Setcolor
 (drawpoly) 10 [ -34]
[750 530 750 3710 5250 3710 5250 530 750 530 
] dogrey 
33 Setcolor
/absolu true def
32 Setcolor
[] 0 setdash
32 Setcolor
0 Setcolor
10 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
10 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 1200 [ 0]
[758 3710 765 3709 773 3708 780 3706 788 3704 795 3701 803 3697 810 3693 818 3688 825 3683 
833 3677 840 3671 848 3664 855 3657 863 3650 870 3641 878 3633 885 3624 893 3614 900 3605 
908 3594 915 3584 923 3573 930 3561 938 3550 945 3537 953 3525 960 3512 968 3499 975 3486 
983 3472 990 3458 998 3444 1005 3429 1013 3414 1020 3399 1028 3384 1035 3369 1043 3353 1050 3337 
1058 3321 1065 3304 1073 3288 1080 3271 1088 3254 1095 3237 1103 3219 1110 3202 1118 3184 1125 3166 
1133 3149 1140 3131 1148 3112 1155 3094 1163 3076 1170 3057 1178 3039 1185 3020 1193 3001 1200 2983 
1208 2964 1215 2945 1223 2926 1230 2907 1238 2888 1245 2869 1253 2849 1260 2830 1268 2811 1275 2792 
1283 2773 1290 2753 1298 2734 1305 2715 1313 2695 1320 2676 1328 2657 1335 2638 1343 2619 1350 2599 
1358 2580 1365 2561 1373 2542 1380 2523 1388 2504 1395 2485 1403 2466 1410 2447 1418 2428 1425 2410 
1433 2391 1440 2373 1448 2354 1455 2336 1463 2317 1470 2299 1478 2281 1485 2263 1493 2245 1500 2227 
1508 2209 1515 2191 1523 2173 1530 2156 1538 2138 1545 2121 1553 2104 1560 2087 1568 2070 1575 2053 
1583 2036 1590 2019 1598 2003 1605 1986 1613 1970 1620 1954 1628 1937 1635 1921 1643 1906 1650 1890 
1658 1874 1665 1859 1673 1844 1680 1828 1688 1813 1695 1798 1703 1783 1710 1769 1718 1754 1725 1740 
1733 1726 1740 1711 1748 1697 1755 1684 1763 1670 1770 1656 1778 1643 1785 1629 1793 1616 1800 1603 
1808 1590 1815 1578 1823 1565 1830 1552 1838 1540 1845 1528 1853 1516 1860 1504 1868 1492 1875 1481 
1883 1469 1890 1458 1898 1447 1905 1435 1913 1425 1920 1414 1928 1403 1935 1393 1943 1382 1950 1372 
1958 1362 1965 1352 1973 1342 1980 1332 1988 1323 1995 1313 2003 1304 2010 1295 2018 1286 2025 1277 
2033 1268 2040 1259 2048 1251 2055 1243 2063 1234 2070 1226 2078 1218 2085 1210 2093 1203 2100 1195 
2108 1188 2115 1180 2123 1173 2130 1166 2138 1159 2145 1152 2153 1145 2160 1139 2168 1132 2175 1126 
2183 1119 2190 1113 2198 1107 2205 1101 2213 1095 2220 1090 2228 1084 2235 1079 2243 1073 2250 1068 
2258 1063 2265 1058 2273 1053 2280 1048 2288 1043 2295 1039 2303 1034 2310 1030 2318 1025 2325 1021 
2333 1017 2340 1013 2348 1009 2355 1005 2363 1001 2370 997 2378 994 2385 990 2393 987 2400 984 
2408 980 2415 977 2423 974 2430 971 2438 968 2445 965 2453 963 2460 960 2468 957 2475 955 
2483 952 2490 950 2498 948 2505 946 2513 943 2520 941 2528 939 2535 937 2543 936 2550 934 
2558 932 2565 930 2573 929 2580 927 2588 926 2595 925 2603 923 2610 922 2618 921 2625 920 
2633 918 2640 917 2648 916 2655 915 2663 915 2670 914 2678 913 2685 912 2693 912 2700 911 
2708 910 2715 910 2723 909 2730 909 2738 909 2745 908 2753 908 2760 908 2768 907 2775 907 
2783 907 2790 907 2798 907 2805 907 2813 907 2820 907 2828 907 2835 907 2843 907 2850 907 
2858 908 2865 908 2873 908 2880 909 2888 909 2895 909 2903 910 2910 910 2918 910 2925 911 
2933 911 2940 912 2948 913 2955 913 2963 914 2970 914 2978 915 2985 916 2993 916 3000 917 
3008 918 3015 919 3023 919 3030 920 3038 921 3045 922 3053 922 3060 923 3068 924 3075 925 
3083 926 3090 927 3098 928 3105 929 3113 930 3120 931 3128 932 3135 933 3143 934 3150 935 
3158 936 3165 937 3173 938 3180 939 3188 940 3195 941 3203 942 3210 943 3218 944 3225 945 
3233 946 3240 947 3248 948 3255 949 3263 950 3270 951 3278 953 3285 954 3293 955 3300 956 
3308 957 3315 958 3323 959 3330 960 3338 961 3345 962 3353 964 3360 965 3368 966 3375 967 
3383 968 3390 969 3398 970 3405 971 3413 972 3420 974 3428 975 3435 976 3443 977 3450 978 
3458 979 3465 980 3473 981 3480 982 3488 983 3495 984 3503 986 3510 987 3518 988 3525 989 
3533 990 3540 991 3548 992 3555 993 3563 994 3570 995 3578 996 3585 997 3593 998 3600 999 
3608 1000 3615 1001 3623 1002 3630 1003 3638 1004 3645 1005 3653 1006 3660 1007 3668 1008 3675 1009 
3683 1010 3690 1010 3698 1011 3705 1012 3713 1013 3720 1014 3728 1015 3735 1016 3743 1017 3750 1018 
3758 1018 3765 1019 3773 1020 3780 1021 3788 1022 3795 1023 3803 1023 3810 1024 3818 1025 3825 1026 
3833 1027 3840 1027 3848 1028 3855 1029 3863 1030 3870 1030 3878 1031 3885 1032 3893 1032 3900 1033 
3908 1034 3915 1035 3923 1035 3930 1036 3938 1037 3945 1037 3953 1038 3960 1038 3968 1039 3975 1040 
3983 1040 3990 1041 3998 1042 4005 1042 4013 1043 4020 1043 4028 1044 4035 1044 4043 1045 4050 1046 
4058 1046 4065 1047 4073 1047 4080 1048 4088 1048 4095 1049 4103 1049 4110 1050 4118 1050 4125 1051 
4133 1051 4140 1051 4148 1052 4155 1052 4163 1053 4170 1053 4178 1054 4185 1054 4193 1054 4200 1055 
4208 1055 4215 1056 4223 1056 4230 1056 4238 1057 4245 1057 4253 1057 4260 1058 4268 1058 4275 1058 
4283 1059 4290 1059 4298 1059 4305 1060 4313 1060 4320 1060 4328 1061 4335 1061 4343 1061 4350 1061 
4358 1062 4365 1062 4373 1062 4380 1062 4388 1063 4395 1063 4403 1063 4410 1063 4418 1063 4425 1064 
4433 1064 4440 1064 4448 1064 4455 1064 4463 1065 4470 1065 4478 1065 4485 1065 4493 1065 4500 1066 
4508 1066 4515 1066 4523 1066 4530 1066 4538 1066 4545 1066 4553 1067 4560 1067 4568 1067 4575 1067 
4583 1067 4590 1067 4598 1067 4605 1067 4613 1067 4620 1068 4628 1068 4635 1068 4643 1068 4650 1068 
4658 1068 4665 1068 4673 1068 4680 1068 4688 1068 4695 1068 4703 1068 4710 1068 4718 1068 4725 1068 
4733 1069 4740 1069 4748 1069 4755 1069 4763 1069 4770 1069 4778 1069 4785 1069 4793 1069 4800 1069 
4808 1069 4815 1069 4823 1069 4830 1069 4838 1069 4845 1069 4853 1069 4860 1069 4868 1069 4875 1069 
4883 1069 4890 1069 4898 1069 4905 1069 4913 1069 4920 1069 4928 1069 4935 1069 4943 1069 4950 1069 
4958 1069 4965 1069 4973 1069 4980 1069 4988 1069 4995 1069 5003 1069 5010 1068 5018 1068 5025 1068 
5033 1068 5040 1068 5048 1068 5055 1068 5063 1068 5070 1068 5078 1068 5085 1068 5093 1068 5100 1068 
5108 1068 5115 1068 5123 1068 5130 1068 5138 1068 5145 1068 5153 1068 5160 1068 5168 1068 5175 1067 
5183 1067 5190 1067 5198 1067 5205 1067 5213 1067 5220 1067 5228 1067 5235 1067 5243 1067 5250 1067 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
32 Setcolor
5 Thickness
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(0) 723 3873 0  0.00 [723 3773 55 99] Show
%Latex:\myput{723}{367}{5}{0}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 750 3773 
] dogrey 
32 Setcolor
32 Setcolor
(100) 1417 3873 0  0.00 [1417 3773 166 99] Show
%Latex:\myput{1417}{367}{5}{100}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[1500 3710 1500 3773 
] dogrey 
32 Setcolor
32 Setcolor
(200) 2167 3873 0  0.00 [2167 3773 166 99] Show
%Latex:\myput{2167}{367}{5}{200}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[2250 3710 2250 3773 
] dogrey 
32 Setcolor
32 Setcolor
(300) 2917 3873 0  0.00 [2917 3773 166 99] Show
%Latex:\myput{2917}{367}{5}{300}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[3000 3710 3000 3773 
] dogrey 
32 Setcolor
32 Setcolor
(400) 3667 3873 0  0.00 [3667 3773 166 99] Show
%Latex:\myput{3667}{367}{5}{400}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[3750 3710 3750 3773 
] dogrey 
32 Setcolor
32 Setcolor
(500) 4417 3873 0  0.00 [4417 3773 166 99] Show
%Latex:\myput{4417}{367}{5}{500}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[4500 3710 4500 3773 
] dogrey 
32 Setcolor
32 Setcolor
(600) 5167 3873 0  0.00 [5167 3773 166 99] Show
%Latex:\myput{5167}{367}{5}{600}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[5250 3710 5250 3773 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 750 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[938 3710 938 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[1125 3710 1125 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[1313 3710 1313 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[1500 3710 1500 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[1688 3710 1688 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[1875 3710 1875 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[2063 3710 2063 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[2250 3710 2250 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[2438 3710 2438 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[2625 3710 2625 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[2813 3710 2813 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[3000 3710 3000 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[3188 3710 3188 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[3375 3710 3375 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[3563 3710 3563 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[3750 3710 3750 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[3938 3710 3938 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[4125 3710 4125 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[4313 3710 4313 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[4500 3710 4500 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[4688 3710 4688 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[4875 3710 4875 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[5063 3710 5063 3757 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(0.0) 539 3748 0  0.00 [539 3648 139 99] Show
%Latex:\myput{539}{492}{5}{0.0}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 690 3710 
] dogrey 
32 Setcolor
32 Setcolor
(0.2) 539 3218 0  0.00 [539 3118 139 99] Show
%Latex:\myput{539}{1022}{5}{0.2}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3180 690 3180 
] dogrey 
32 Setcolor
32 Setcolor
(0.4) 539 2688 0  0.00 [539 2588 139 99] Show
%Latex:\myput{539}{1552}{5}{0.4}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 2650 690 2650 
] dogrey 
32 Setcolor
32 Setcolor
(0.6) 539 2158 0  0.00 [539 2058 139 99] Show
%Latex:\myput{539}{2082}{5}{0.6}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 2120 690 2120 
] dogrey 
32 Setcolor
32 Setcolor
(0.8) 539 1628 0  0.00 [539 1528 139 99] Show
%Latex:\myput{539}{2612}{5}{0.8}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 1590 690 1590 
] dogrey 
32 Setcolor
32 Setcolor
(1.0) 539 1098 0  0.00 [539 998 139 99] Show
%Latex:\myput{539}{3142}{5}{1.0}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 1060 690 1060 
] dogrey 
32 Setcolor
32 Setcolor
(1.2) 539 568 0  0.00 [539 468 139 99] Show
%Latex:\myput{539}{3672}{5}{1.2}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 530 690 530 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 705 3710 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3577 705 3577 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3445 705 3445 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3312 705 3312 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3180 705 3180 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3048 705 3048 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2915 705 2915 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2782 705 2782 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2650 705 2650 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2517 705 2517 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2385 705 2385 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2253 705 2253 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2120 705 2120 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1987 705 1987 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1855 705 1855 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1723 705 1723 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1590 705 1590 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1458 705 1458 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1325 705 1325 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1193 705 1193 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1060 705 1060 
] dogrey 
 (drawsegs) 4 [ 32]
[750 928 705 928 
] dogrey 
 (drawsegs) 4 [ 32]
[750 795 705 795 
] dogrey 
 (drawsegs) 4 [ 32]
[750 663 705 663 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 5250 3710 
] dogrey 
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 750 530 
] dogrey 
32 Setcolor
 (drawbox) 4 [ 0]
[750 530 4500 3180 
] dogrey 
32 Setcolor
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(Gain controller step response) 2346 292 0  0.00 [2346 192 1306 99] Show
%Latex:\myput{2346}{3948}{5}{Gain controller step response}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(Discrete time) 2709 4063 0  0.00 [2709 3963 583 99] Show
%Latex:\myput{2709}{177}{5}{Discrete time}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(Amplitude) 475 2321 0 270.00 [475 2221 444 99] Show
%Latex:\myput{475}{1919}{5}{Amplitude}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
%Latex:\end{picture}
 showpage

 end saved restore 


